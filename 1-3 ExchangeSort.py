# 리스트의 정렬 문제
# 문제 : n개의 수로 구성된 리스트 S를 비내림차순으로 정렬하시오 (오름차순)
# 해답 : S를 비내림차순으로 정렬한 리스트
# 파라미터 : S, n
# 입력사례 : S = [-1, 10, 7, 11, 5, 13, 8]
# 입력사례에 대한 해답 : S` = [-1, 5, 7, 8, 10, 11, 13]
# 알고리즘 : 모든 S에대해서 S`을 찾아주는 단계별절차
# - 교환정렬, 삽입정렬, 선택정렬, 합병정렬, 퀵정렬, 기타 등등
# - 여러가지 정렬 알고리즘 중에서 교환정렬 방법으로 구현

# 교환 정렬
# - i번째 자리에 있는 수와  `1`
# (i + 1) 번째 부터 n번째 자리에 있는 수를 차례대로 비교
# - 주어진 자리의 수가 i번째 자리에 있는 수보다 작은 경우,
#   두 수를 교환
# - for - i 루프를 한 번 수행하면 그 중 가장 작은 수가 첫번째 자리에 들어감
# - 두번쨰 루프를 수행하면 둘째 자리에 둘째로 작은 수가 들어감

def exchange (n, S):
    n = len(S)
    for i in range(n-1):
        for j in range(i+1, n):
            if (S[i] > S[j]):
                S[i], S[j] = S[j], S[i] # swap 왼쪽으로 값을 스왑

        print(S)
S = [-1, 10, 7, 11, 5, 13, 8]
print('Before =', S)
exchange(len(S)-1, S)
print('After =', S)
